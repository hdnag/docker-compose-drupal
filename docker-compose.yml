################################################################################
# Docker Compose Drupal full dev stack.
# Project page:
#   https://github.com/Mogtofu33/docker-compose-drupal
# Documentation:
#   https://github.com/Mogtofu33/docker-compose-drupal/blob/master/README.md
################################################################################
version: '3'
services:
  apache:
    image: mogtofu33/apache:latest
    depends_on:
      - php
    ports:
      - 80:80
      - 443:443
      # Web root access, optional but can help with multi sites.
      - 88:81
    volumes:
      - ./data/www:/var/www/localhost
      # Apache configuration with SSL support.
      - ./config/apache/httpd.conf:/etc/apache2/httpd.conf:ro
      - ./config/apache/vhost.conf:/etc/apache2/vhost.conf:ro
      - ./config/apache/conf.d/:/etc/apache2/conf.d/:ro
      - ./config/apache/ssl/:/etc/ssl/apache2/:ro
      # Php FPM socket
      - php-sock:/sock:ro
      ## If PgSQL, ease drush pgsql access.
      - ./config/pgsql/.pg_pass:/home/apache/.pg_pass:ro
    env_file: .env
    container_name: dcd-apache
  php:
    image: mogtofu33/php:7
    volumes:
      - ./data/www:/var/www/localhost
      - ./config/php/7.1/php.ini:/etc/php7/php.ini:ro
      - ./config/php/7.1/php-fpm.conf:/etc/php7/php-fpm.conf:ro
      - ./config/php/7.1/conf.d/:/etc/php7/conf.d/:ro
      - ./config/php/7.1/php-fpm.d/:/etc/php7/php-fpm.d/:ro
      # Drush 9 alias and drushrc files (or any other config)
      - ./config/drush/d.alias.yml:/etc/drush/d.alias.yml:ro
      - ./config/drush/drush.yml:/etc/drush/drush.yml:ro
      # Used by dashboard for accessing tools.
      - ./tools:/tools:ro
      # Share db dump folder.
      - ./data/dump:/dump
      # Php FPM socket
      - php-sock:/sock
      ## If PgSQL, ease drush pgsql access.
      - ./config/pgsql/.pg_pass:/home/apache/.pg_pass:ro
      ## If you have composer set locally, share cache to speed up.
      # - ${HOME:-}/.composer/cache:/composer/cache
    env_file: .env
    container_name: dcd-php

  # Container to run cli applications (composer, drush, drupal-console, etc.)
  php-cli:
    # Here, we use a Dockerfile and not a Docker Image. The file is Dockerfile-php-cli and is in the same repository
    # than the docker-compose.yml
    build:
      context: .
      dockerfile: Dockerfile-php-cli
      # Arguments pass to the Dockerfile.
      args:
        USER_UID: 1000
    volumes:
      # Data of application
      - .:/var/www/html:rw
      # Share the local user's composer cache and settings
      - ~/.composer:/home/php/.composer:rw
      # Share the local user's npm cache as a Docker volume
      - ~/.npm:/home/php/.npm:rw
      # Share the local user's SSH keys and configuration (read-only)
      - ~/.ssh:/home/php/.ssh:ro
      # Share the local user's known_host
      - ~/.ssh/known_hosts:/home/php/.ssh/known_hosts:rw
      # Share the local user's gitconfig
      - ~/.gitconfig:/home/php/.gitconfig
    environment:
      # We define the PATH and add the bin directory of vendor.
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/var/www/html/vendor/bin
volumes:
  php-sock: